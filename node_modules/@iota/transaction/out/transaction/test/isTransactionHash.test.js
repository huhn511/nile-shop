"use strict";
exports.__esModule = true;
var samples_1 = require("@iota/samples");
var ava_1 = require("ava");
var src_1 = require("../src");
ava_1["default"]('isTransactionHash() returns true for valid transaction hash.', function (t) {
    var hash = 'OZQCYCGHUJHNLDUOKXUPEDCDJCPEWEDXFAFPCGKKDVHVTGUEKBW9VUYDUVEAPZZGPHYMVHABOWZHA9999';
    t.is(src_1.isTransactionHash(hash), true, 'isTransactionHash() should return true for valid transaction hash.');
});
ava_1["default"]('isTransactionHash() returns true if provided hash is valid and minWeightMagnitude <= weightMagnitude.', function (t) {
    t.is(src_1.isTransactionHash(samples_1.transactionObject.hash, 3), true, 'isTransactionHash() returns true if provided hash is valid and minWeightMagnitude <= weightMagnitude.');
});
ava_1["default"]('isTransactionHash() returns false if provided hash is invalid and minWeightMagnitude <= weightMagnitude.', function (t) {
    t.is(src_1.isTransactionHash(samples_1.transactionObject.hash.slice(1), 3), false, 'isTransactionHash() returns false if provided hash is invalid and minWeightMagnitude <= weightMagnitude.');
});
ava_1["default"]('isTransactionHash() returns false if provided hash is valid and minWeightMagnitude > weightMagnitude.', function (t) {
    t.is(src_1.isTransactionHash(samples_1.transactionObject.hash, 5), false, 'isTransactionHash() returns false if provided hash is valid and minWeightMagnitude > weightMagnitude.');
});
ava_1["default"]('isTransactionHash() returns false for invalid transaction hash.', function (t) {
    var invalidLength = 'OZQCYCGHUJHNLDUOKXUPEDCDJCPEWEDXFAFPCGKKDVHVTGUEKBW9VUYDUVEAPZZGPHYMVHABOWZHA9999ASDFASDFA';
    var invalidTrytes = 'sadfYCGHUJHNLDUOKXUPEDCDJCPEWEDXFAFPCGKKDVHVTGUEKBW9VUYDUVEAPZZGPHYMVHABOWZHA9999';
    t.is(src_1.isTransactionHash(invalidLength), false, 'isTransactionHash() should return false for input of invalid length.');
    t.is(src_1.isTransactionHash(invalidTrytes), false, 'isTransactionHash() should return false for invalid trytes.');
});
//# sourceMappingURL=isTransactionHash.test.js.map