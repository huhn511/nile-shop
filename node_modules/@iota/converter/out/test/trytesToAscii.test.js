"use strict";
exports.__esModule = true;
var ava_1 = require("ava");
var src_1 = require("../src");
var errors = require("../src/errors");
var INVALID_ODD_LENGTH = errors.INVALID_ODD_LENGTH, INVALID_TRYTES = errors.INVALID_TRYTES;
ava_1["default"]('trytesToAscii()', function (t) {
    var trytes = 'SBYBCCKB';
    var expected = 'IOTA';
    var nonTrytes = 'AAAfasds';
    var trytesOfOddLength = 'AAA';
    t.is(src_1.trytesToAscii(trytes), expected, 'fromTrytes() should convert trytes to ascii.');
    var invalidTrytesError = t.throws(function () { return src_1.trytesToAscii(nonTrytes); }, Error, 'fromTrytes() should throw error for non-trytes.');
    t.is(invalidTrytesError.message, INVALID_TRYTES, 'incorrect error message');
    var oddLengthError = t.throws(function () { return src_1.trytesToAscii(trytesOfOddLength); }, Error, 'fromTrytes() should throw error for trytes of odd length.');
    t.is(oddLengthError.message, INVALID_ODD_LENGTH, 'incorrect error message');
});
//# sourceMappingURL=trytesToAscii.test.js.map