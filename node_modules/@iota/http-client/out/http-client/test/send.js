"use strict";
exports.__esModule = true;
var nock = require("nock");
var types_1 = require("../../types");
exports.apiVersion = 1;
exports.requestBatchSize = 3;
exports.headers = function (version) {
    if (version === void 0) { version = exports.apiVersion; }
    return ({
        reqheaders: {
            'Content-Type': 'application/json',
            'X-IOTA-API-Version': version.toString()
        }
    });
};
exports.findTransactionsCommand = {
    command: types_1.IRICommand.FIND_TRANSACTIONS,
    addresses: ['A'.repeat(81), 'B'.repeat(81), 'C'.repeat(81)],
    tags: ['A'.repeat(27), 'B'.repeat(27), 'C'.repeat(27)],
    approvees: ['D'.repeat(81), 'E'.repeat(81), 'F'.repeat(81)]
};
exports.findTransactionsResponse = {
    hashes: ['H'.repeat(81)]
};
exports.invalidCommand = {
    command: types_1.IRICommand.FIND_TRANSACTIONS,
    addresses: ['asdfsf']
};
exports.invalidGetTransactionsToApproveCommand = {
    command: types_1.IRICommand.GET_TRANSACTIONS_TO_APPROVE,
    depth: 42000
};
exports.invalidGetTransactionsToApproveResponse = {
    error: 'Invalid depth input',
    duration: 0
};
exports.invalidGetTransactionsToApproveCommandIgnored = {
    command: types_1.IRICommand.GET_TRANSACTIONS_TO_APPROVE,
    depth: 42001
};
exports.validSendNock = nock('http://localhost:24265', exports.headers())
    .persist()
    .post('/', exports.findTransactionsCommand)
    .reply(200, exports.findTransactionsResponse);
exports.InvalidSendNock = nock('http://localhost:24265', exports.headers())
    .persist()
    .post('/', exports.invalidCommand)
    .reply(400);
exports.InvalidGetTransactionsToApproveCommandNock = nock('http://localhost:24265', exports.headers())
    .persist()
    .post('/', exports.invalidGetTransactionsToApproveCommand)
    .reply(400, exports.invalidGetTransactionsToApproveResponse);
exports.invalidJSONResponseNock = nock('http://localhost:24265', exports.headers())
    .persist()
    .post('/', exports.invalidGetTransactionsToApproveCommandIgnored)
    .reply(400, 'Invalid json');
//# sourceMappingURL=send.js.map