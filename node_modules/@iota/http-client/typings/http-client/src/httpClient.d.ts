/** @module http-client */
import { BaseCommand, FindTransactionsCommand, GetBalancesCommand, GetInclusionStatesCommand, GetTrytesCommand, Provider } from '../../types';
import { Settings } from './settings';
export interface MapsToArrays {
    [key: string]: any[];
}
export declare type BatchableCommand<C> = C & MapsToArrays & (FindTransactionsCommand | GetBalancesCommand | GetInclusionStatesCommand | GetTrytesCommand);
export interface BatchableKeys {
    readonly [key: string]: string[];
}
export declare type BatchableKey = 'addresses' | 'approvees' | 'bundles' | 'tags' | 'tips' | 'transactions' | 'hashes';
export declare const batchableKeys: BatchableKeys;
export declare const isBatchableCommand: <C>(command: BaseCommand) => command is BatchableCommand<C>;
export declare const getKeysToBatch: <C>(command: BatchableCommand<C>, batchSize?: number) => ReadonlyArray<string>;
/**
 * Create an http client to access IRI http API.
 *
 * @method createHttpClient
 *
 * @param {object} [settings={}]
 * @param {string} [settings.provider=http://localhost:14265] Uri of IRI node
 * @param {string | number} [settings.apiVersion=1] - IOTA Api version to be sent as `X-IOTA-API-Version` header.
 * @param {number} [settings.requestBatchSize=1000] - Number of search values per request.
 * @return Object
 */
export declare const createHttpClient: (settings?: Partial<Settings> | undefined) => Provider;
