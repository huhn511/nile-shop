/** @module bundle */
import '../../typed-array';
import { Bundle, Hash, Transaction, // tslint:disable-line no-unused-variable
Trytes } from '../../types';
export interface BundleEntry {
    readonly length: number;
    readonly address: Hash;
    readonly value: number;
    readonly tag: string;
    readonly timestamp: number;
    readonly signatureMessageFragments: ReadonlyArray<Trytes>;
}
export { Transaction, Bundle };
/**
 * Creates a bundle with given transaction entries.
 *
 * @method createBundle
 *
 * @param {BundleEntry[]} entries - Entries of single or multiple transactions with the same address
 *
 * @return {Transaction[]} List of transactions in the bundle
 */
export declare const createBundle: (entries?: ReadonlyArray<Partial<BundleEntry>>) => ReadonlyArray<Transaction>;
/**
 * Adds given transaction entry to a bundle.
 *
 * @method addEntry
 *
 * @param {Transaction[]} transactions - List of transactions currently in the bundle
 *
 * @param {object} entry - Entry of a single or multiple transactions with the same address
 * @param {number} [entry.length = 1] - Entry length, which indicates how many transactions in the bundle it will occupy
 * @param {Hash} [entry.address] - Address, defaults to all-9s
 * @param {number} [entry.value = 0] - Value to transfer in iotas
 * @param {Trytes[]} [entry.signatureMessageFragments] - List of signature message fragments, defaults to all-9s
 * @param {number} [entry.timestamp] - Transaction timestamp, defaults to `Math.floor(Date.now() / 1000)`
 * @param {string} [entry.tag] - Optional Tag, defaults to null tag (all-9s)
 *
 * @return {Transaction[]} List of transactions in the updated bundle
 */
export declare const addEntry: (transactions: ReadonlyArray<Transaction>, entry: Partial<BundleEntry>) => ReadonlyArray<Transaction>;
/**
 * Adds signature message fragments to transactions in a bundle starting at offset.
 *
 * @method addTrytes
 *
 * @param {Transaction[]} transactions - List of transactions in the bundle
 *
 * @param {Trytes[]} fragments - List of signature message fragments to add
 *
 * @param {number} [offset = 0] - Optional offset to start appending signature message fragments
 *
 * @return {Transaction[]} List of transactions in the updated bundle
 */
export declare const addTrytes: (transactions: ReadonlyArray<Transaction>, fragments: ReadonlyArray<string>, offset?: number) => ReadonlyArray<Transaction>;
/**
 * Finalizes a bundle by calculating the bundle hash.
 *
 * @method finalizeBundle
 *
 * @param {Transaction[]} transactions - List of transactions in the bundle
 *
 * @return {Transaction[]} List of transactions in the finalized bundle
 */
export declare const finalizeBundle: (transactions: ReadonlyArray<Transaction>) => ReadonlyArray<Transaction>;
