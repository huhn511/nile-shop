"use strict";
exports.__esModule = true;
var samples_1 = require("@iota/samples");
var nock = require("nock");
var types_1 = require("../../../../types");
var headers_1 = require("./headers");
exports.getBalancesCommand = {
    command: types_1.IRICommand.GET_BALANCES,
    addresses: samples_1.addresses,
    threshold: 100
};
var getBalancesResponse = {
    balances: ['3', '4', '10'],
    milestone: 'M'.repeat(81),
    milestoneIndex: 1,
    duration: 10
};
nock('http://localhost:14265', headers_1["default"])
    .persist()
    .post('/', {
    command: types_1.IRICommand.WERE_ADDRESSES_SPENT_FROM,
    addresses: [samples_1.addresses[0]]
})
    .reply(200, {
    states: [true]
});
nock('http://localhost:14265', headers_1["default"])
    .persist()
    .post('/', {
    command: types_1.IRICommand.WERE_ADDRESSES_SPENT_FROM,
    addresses: [samples_1.addresses[1]]
})
    .reply(200, {
    states: [false]
});
nock('http://localhost:14265', headers_1["default"])
    .persist()
    .post('/', {
    command: types_1.IRICommand.WERE_ADDRESSES_SPENT_FROM,
    addresses: [samples_1.addresses[2]]
})
    .reply(200, {
    states: [false]
});
nock('http://localhost:14265', headers_1["default"])
    .persist()
    .post('/', exports.getBalancesCommand)
    .reply(200, getBalancesResponse);
nock('http://localhost:14265', headers_1["default"])
    .persist()
    .post('/', {
    command: types_1.IRICommand.FIND_TRANSACTIONS,
    addresses: [samples_1.addresses[1]]
})
    .reply(200, {
    hashes: ['A'.repeat(81)]
});
nock('http://localhost:14265', headers_1["default"])
    .persist()
    .post('/', {
    command: types_1.IRICommand.FIND_TRANSACTIONS,
    addresses: [samples_1.addresses[2]]
})
    .reply(200, {
    hashes: []
});
//# sourceMappingURL=prepareTransfers.js.map