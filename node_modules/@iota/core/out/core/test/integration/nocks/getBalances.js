"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
var samples_1 = require("@iota/samples");
var nock = require("nock");
var types_1 = require("../../../../types");
var headers_1 = require("./headers");
exports.getBalancesCommand = {
    command: types_1.IRICommand.GET_BALANCES,
    addresses: samples_1.addresses,
    threshold: 100
};
exports.getBalancesCommandWithTips = __assign({}, exports.getBalancesCommand, { tips: ['M'.repeat(81)] });
exports.balancesResponse = {
    balances: [99, 0, 1],
    milestone: 'M'.repeat(81),
    milestoneIndex: 1
};
exports.getBalancesNock = nock('http://localhost:14265', headers_1["default"])
    .persist()
    .post('/', exports.getBalancesCommand)
    .reply(200, exports.balancesResponse);
exports.getBalancesNockWithTips = nock('http://localhost:14265', headers_1["default"])
    .persist()
    .post('/', exports.getBalancesCommandWithTips)
    .reply(200, exports.balancesResponse);
nock('http://localhost:14265', headers_1["default"])
    .persist()
    .post('/', __assign({}, exports.getBalancesCommand, { addresses: [samples_1.addresses[1], samples_1.addresses[2]] }))
    .reply(200, __assign({}, exports.balancesResponse, { balances: ['0', '1'] }));
//# sourceMappingURL=getBalances.js.map