"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var _this = this;
exports.__esModule = true;
var http_client_1 = require("@iota/http-client");
var samples_1 = require("@iota/samples");
var ava_1 = require("ava");
var errors_1 = require("../../../errors");
var src_1 = require("../../src");
require("./nocks/broadcastTransactions");
var storeTransactions_1 = require("./nocks/storeTransactions");
var storeAndBroadcast = src_1.createStoreAndBroadcast(http_client_1.createHttpClient());
ava_1["default"]('storeAndBroadcast() stores and broadcasts transactions.', function (t) { return __awaiter(_this, void 0, void 0, function () {
    var trytes, _a, _b;
    return __generator(this, function (_c) {
        switch (_c.label) {
            case 0:
                trytes = storeTransactions_1.storeTransactionsCommand.trytes;
                _b = (_a = t).deepEqual;
                return [4 /*yield*/, storeAndBroadcast(trytes.slice())];
            case 1:
                _b.apply(_a, [_c.sent(),
                    trytes,
                    'storeAndBroadcast() should store and bradcast transactions.']);
                return [2 /*return*/];
        }
    });
}); });
ava_1["default"]('storeAndBroadcast() does not mutate original trytes.', function (t) { return __awaiter(_this, void 0, void 0, function () {
    var trytes;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                trytes = storeTransactions_1.storeTransactionsCommand.trytes;
                return [4 /*yield*/, storeAndBroadcast(trytes)];
            case 1:
                _a.sent();
                t.deepEqual(trytes, storeTransactions_1.storeTransactionsCommand.trytes, 'storeAndBroadcast() should not mutate original trytes.');
                return [2 /*return*/];
        }
    });
}); });
ava_1["default"]('storeAndBroadcast() rejects with correct error for invalid attached trytes.', function (t) {
    var invalidTrytes = ['asdasDSFDAFD'];
    t.is(t.throws(function () { return storeAndBroadcast(invalidTrytes); }, Error).message, errors_1.INVALID_ATTACHED_TRYTES + ": " + invalidTrytes[0], 'storeAndBroadcast() should throw error for invalid attached trytes.');
});
ava_1["default"]('storeAndBroadcast() rejects with correct errors for attached trytes of invalid length.', function (t) {
    t.is(t.throws(function () { return storeAndBroadcast(samples_1.attachedTrytesOfInvalidLength); }, Error).message, errors_1.INVALID_ATTACHED_TRYTES + ": " + samples_1.attachedTrytesOfInvalidLength[0], 'storeAndBroadcast() should throw error for attached trytes of invalid length.');
});
ava_1["default"].cb('storeAndBroadcast() invokes callback', function (t) {
    storeAndBroadcast(storeTransactions_1.storeTransactionsCommand.trytes.slice(), t.end);
});
ava_1["default"].cb('storeAndBroadcast() passes correct arguments to callback', function (t) {
    var trytes = storeTransactions_1.storeTransactionsCommand.trytes;
    storeAndBroadcast(trytes.slice(), function (err, res) {
        t.is(err, null, 'storeAndBroadcast() should pass null as first argument in callback for successuful requests');
        t.deepEqual(res, trytes, 'storeAndBroadcast() should pass the correct response as second argument in callback');
        t.end();
    });
});
//# sourceMappingURL=storeAndBroadcast.test.js.map