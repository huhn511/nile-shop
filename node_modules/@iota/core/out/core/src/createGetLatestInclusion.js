"use strict";
exports.__esModule = true;
var _1 = require("./");
/**
 * @method createGetLatestInclusion
 *
 * @memberof module:core
 *
 * @param {Provider} provider - Network provider for accessing IRI
 *
 * @return {function} {@link #module_core.getLatestInclusion `getLatestInclusion`}
 */
exports.createGetLatestInclusion = function (provider) {
    var getInclusionStates = _1.createGetInclusionStates(provider);
    var getNodeInfo = _1.createGetNodeInfo(provider);
    /**
     * Fetches inclusion states of given transactions and a list of tips,
     * by calling [`getInclusionStates`]{@link #module_core.getInclusionStates} on `latestSolidSubtangleMilestone`.
     *
     * @example
     *
     * ```js
     * getLatestInclusion(hashes)
     *    .then(states => {
     *        // ...
     *    })
     *    .catch(err => {
     *        // handle error
     *    })
     * ```
     *
     * @method getLatestInclusion
     *
     * @memberof module:core
     *
     * @param {Array<Hash>} transactions - List of transactions hashes
     * @param {number} tips - List of tips to check if transactions are referenced by
     * @param {Callback} [callback] - Optional callback
     *
     * @return {Promise}
     * @fulfil {boolean[]} List of inclusion states
     * @reject {Error}
     * - `INVALID_HASH`: Invalid transaction hash
     * - Fetch error
     */
    return function getLatestInclusion(transactions, callback) {
        return getNodeInfo()
            .then(function (nodeInfo) { return getInclusionStates(transactions, [nodeInfo.latestSolidSubtangleMilestone]); })
            .asCallback(callback);
    };
};
//# sourceMappingURL=createGetLatestInclusion.js.map