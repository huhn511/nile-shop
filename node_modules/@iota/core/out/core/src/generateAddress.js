"use strict";
exports.__esModule = true;
var checksum_1 = require("@iota/checksum");
var converter_1 = require("@iota/converter");
var signing_1 = require("@iota/signing");
var guards_1 = require("../../guards");
/**
 * Generates an address deterministically, according to the given seed, index and security level.
 *
 * @method generateAddress
 *
 * @memberof module:core
 *
 * @param {string} seed
 * @param {number} index - Private key index
 * @param {number} [security=2] - Security level of the private key
 * @param {boolean} [checksum=false] - Flag to add 9trytes checksum
 *
 * @returns {Hash} Address trytes
 */
exports.generateAddress = function (seed, index, security, checksum) {
    if (security === void 0) { security = 2; }
    if (checksum === void 0) { checksum = false; }
    while (seed.length % 81 !== 0) {
        seed += 9;
    }
    guards_1.validate(guards_1.seedValidator(seed), guards_1.securityLevelValidator(security));
    var keyTrits = signing_1.key(signing_1.subseed(converter_1.trits(seed), index), security);
    var digestsTrits = signing_1.digests(keyTrits);
    var addressTrytes = converter_1.trytes(signing_1.address(digestsTrits));
    return checksum ? checksum_1.addChecksum(addressTrytes) : addressTrytes;
};
//# sourceMappingURL=generateAddress.js.map