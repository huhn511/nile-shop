import * as Promise from 'bluebird';
import { Address, Bundle, Callback, Hash, Provider } from '../../types';
/**
 * Account data object
 */
export interface AccountData {
    readonly addresses: ReadonlyArray<Hash>;
    readonly inputs: ReadonlyArray<Address>;
    readonly transfers: ReadonlyArray<Bundle>;
    readonly transactions: ReadonlyArray<Hash>;
    readonly latestAddress: Hash;
    readonly balance: number;
}
export interface GetAccountDataOptions {
    readonly start: number;
    readonly end?: number;
    readonly security: number;
}
export declare const getAccountDataOptions: (options: Readonly<Partial<{
    start: number;
    end?: number | undefined;
    security: number;
}>>) => Readonly<{
    start: number;
    end?: number | undefined;
    security: number;
}>;
/**
 * @method createGetAccountData
 *
 * @memberof module:core
 *
 * @param {Provider} provider - Network provider for accessing IRI
 *
 * @return {function} {@link #module_core.getAccountData `getAccountData`}
 */
export declare const createGetAccountData: (provider: Provider, caller?: string | undefined) => (seed: string, options?: Partial<GetAccountDataOptions>, callback?: Callback<AccountData> | undefined) => Promise<AccountData>;
